/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Managers.GestorAtleta;
import Managers.GestorCompeticao;
import entidades.Atleta;
import entidades.Competicao;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import pdf.Relatorio;

/**
 *
 * @author sergio
 */
public class InterfacePanda extends javax.swing.JFrame {
    private List<Competicao> competicoes;
    private DefaultTableModel modeloTabelaCompeticoes;
    
    private List<Atleta> atletas;
    private DefaultTableModel modeloTabelaAtletas;
    
    private InserirDialog inserirDialog;
    private AlterarDialog alterarDialog;
    //private DialogSenha senhaDialog;
    
    /**
     * Creates new form InterfacePanda
     */
    public InterfacePanda() {
        initComponents();
        competicoes = GestorCompeticao.listarCompeticoes();
        for(Competicao c : competicoes) {
            System.out.println(c.getIdentificacao());
        }
        
        atletas = GestorAtleta.runQuery();
        
        inicializaDialogs();
        inicializaTabelaCompeticoes();
        inicializaTabelaAtletas();
    }
    
    public void inicializaDialogs() {
        //senhaDialog = new DialogSenha(this,rootPaneCheckingEnabled);
        //senhaDialog.setVisible(true);
        inserirDialog = new InserirDialog(this, rootPaneCheckingEnabled);
        alterarDialog = new AlterarDialog(this, rootPaneCheckingEnabled);
    }
    
    public void inicializaTabelaAtletas() {
        modeloTabelaAtletas = new DefaultTableModel();

        TableColumn colunaTabelaIdentificacao = new TableColumn();
        colunaTabelaIdentificacao.setHeaderValue("Identificação");
        TableColumn colunaTabelaPassaporte = new TableColumn();
        colunaTabelaPassaporte.setHeaderValue("Passaporte");
        TableColumn colunaTabelaNome = new TableColumn();
        colunaTabelaNome.setHeaderValue("Nome");
        TableColumn colunaTabelaSexo = new TableColumn();
        colunaTabelaSexo.setHeaderValue("Sexo");
        TableColumn colunaTabelaQtdPartidas = new TableColumn();
        colunaTabelaQtdPartidas.setHeaderValue("Nro. de partidas");
        
        modeloTabelaAtletas.addColumn("Identificação");
        modeloTabelaAtletas.addColumn("Passaporte");
        modeloTabelaAtletas.addColumn("Nome");
        modeloTabelaAtletas.addColumn("Sexo");
        modeloTabelaAtletas.addColumn("Nro. de partidas");
            
        if(atletas.isEmpty()) {
            btnGerarRelatorio.setEnabled(false);
        } else {
            for(Atleta atleta : atletas) {
                Object infoAtleta[] = {atleta.getIdentificacao(), atleta.getPassaporte(),
                atleta.getNome(), atleta.getSexo().toString(), atleta.getQtdPartidas()};
                modeloTabelaAtletas.addRow(infoAtleta);
            }
        }
        tabelaAtletas.setModel(modeloTabelaAtletas);
    }
    
    
    
    public void inicializaTabelaCompeticoes() {
        modeloTabelaCompeticoes = new DefaultTableModel();

        TableColumn colunaTabelaIdentificacao = new TableColumn();
        colunaTabelaIdentificacao.setHeaderValue("Identificação");
        TableColumn colunaTabelaDiaEHora = new TableColumn();
        colunaTabelaDiaEHora.setHeaderValue("Dia e hora");
        TableColumn colunaTabelaNumeroDeFase = new TableColumn();
        colunaTabelaNumeroDeFase.setHeaderValue("Numero de fase");
        TableColumn colunaTabelaLocal = new TableColumn();
        colunaTabelaLocal.setHeaderValue("Local");
        TableColumn colunaTabelaObservacoesGerais = new TableColumn();
        colunaTabelaObservacoesGerais.setHeaderValue("Observacoes Gerais");
        
        modeloTabelaCompeticoes.addColumn("Identificação");
        modeloTabelaCompeticoes.addColumn("Dia e hora");
        modeloTabelaCompeticoes.addColumn("Numero da fase");
        modeloTabelaCompeticoes.addColumn("Local");
        modeloTabelaCompeticoes.addColumn("Observações gerais");
        
        for(Competicao c : competicoes) {
            Object infoCompeticao[] = { c.getIdentificacao(), c.getDiaEHora(),
                c.getNumeroDeFase(), c.getLocal(), c.getObservacoesGerais()};
            modeloTabelaCompeticoes.addRow(infoCompeticao);
        }
        
        tabelaCompeticoes.setModel(modeloTabelaCompeticoes);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane4 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaCompeticoes = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnRecarregar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        scrollTabelaAtleta = new javax.swing.JScrollPane();
        tabelaAtletas = new javax.swing.JTable();
        btnGerarRelatorio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTabbedPane1.setName("painelExternoComAbas"); // NOI18N
        jTabbedPane1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTabbedPane1ComponentAdded(evt);
            }
        });
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setName("tabelaCompeticoes"); // NOI18N

        tabelaCompeticoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaCompeticoes.setName("tabelaCompeticoes"); // NOI18N
        jScrollPane3.setViewportView(tabelaCompeticoes);

        jButton2.setText("Inserir");
        jButton2.setToolTipText("");
        jButton2.setName("btnInserir"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        jButton3.setText("Remover");
        jButton3.setName("btnRemover"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jButton1.setText("Alterar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnRecarregar.setText("Refresh");
        btnRecarregar.setName(""); // NOI18N
        btnRecarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecarregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButton3)
                        .addGap(69, 69, 69)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(btnRecarregar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(btnRecarregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        btnRecarregar.getAccessibleContext().setAccessibleName("Atualizar");

        jTabbedPane1.addTab("Manutenção de Competições", jPanel2);

        tabelaAtletas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaAtletas.setName("tabelaAtletas"); // NOI18N
        scrollTabelaAtleta.setViewportView(tabelaAtletas);

        btnGerarRelatorio.setText("Gerar relatório (pdf)");
        btnGerarRelatorio.setName("btnGerarRelatorio"); // NOI18N
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });

        jLabel1.setText("O relatório será gerado com o nome atletas.pdf.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnGerarRelatorio)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollTabelaAtleta, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGerarRelatorio)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(scrollTabelaAtleta, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        jTabbedPane1.addTab("Listagem de atletas", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        inserirDialog = new InserirDialog(this, rootPaneCheckingEnabled);
        inserirDialog.setVisible(true);
    }//GEN-LAST:event_btnInserirActionPerformed

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown
    
    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void jTabbedPane1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentAdded

    }//GEN-LAST:event_jTabbedPane1ComponentAdded

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int linhaSelec = tabelaCompeticoes.getSelectedRow();
        int id;
        if(linhaSelec != -1) {
            id = (int)modeloTabelaCompeticoes.getValueAt(linhaSelec, 0);
            GestorCompeticao.removerCompeticao(id);
            competicoes = GestorCompeticao.listarCompeticoes();
            inicializaTabelaCompeticoes();
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        alterarDialog = new AlterarDialog(this, rootPaneCheckingEnabled, competicoes);
        alterarDialog.setVisible(true);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed
        Relatorio r = new Relatorio("atletas.pdf", "Atletas da Olimpíadas de Tóquio 2020", 
                "Relatorio da participação dos atletas nas Olimpíadas de Tóquio de 2020.");
        r.adicionaElementosNaTabela(atletas);
        r.geraDocumento();
    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void btnRecarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecarregarActionPerformed
        competicoes = GestorCompeticao.listarCompeticoes();
        inicializaTabelaCompeticoes();
    }//GEN-LAST:event_btnRecarregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacePanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacePanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacePanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacePanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacePanda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerarRelatorio;
    private javax.swing.JButton btnRecarregar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JScrollPane scrollTabelaAtleta;
    private javax.swing.JTable tabelaAtletas;
    private javax.swing.JTable tabelaCompeticoes;
    // End of variables declaration//GEN-END:variables
}
